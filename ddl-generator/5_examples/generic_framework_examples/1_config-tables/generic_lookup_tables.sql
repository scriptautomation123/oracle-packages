-- =====================================================
-- Oracle Generic Maintenance Lookup Tables
-- Reference tables for generic maintenance strategies
-- Author: Principal Oracle Database Application Engineer
-- Version: 1.0
-- =====================================================

-- Strategy Types Lookup Table
CREATE TABLE generic_strategy_types (
    strategy_type_id  NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    strategy_name     VARCHAR2(50) NOT NULL UNIQUE,
    strategy_type     VARCHAR2(20) NOT NULL,
    description       VARCHAR2(200),
    category          VARCHAR2(30), -- DATABASE, APPLICATION, INFRASTRUCTURE, etc.
    is_active        CHAR(1) DEFAULT 'Y',
    created_date     DATE DEFAULT SYSDATE,
    CONSTRAINT chk_strategy_type_active CHECK (is_active IN ('Y', 'N'))
);

-- Insert strategy types
INSERT INTO generic_strategy_types (strategy_name, strategy_type, description, category) VALUES ('PARTITION_MAINTENANCE', 'MAINTENANCE', 'Database partition maintenance strategy', 'DATABASE');
INSERT INTO generic_strategy_types (strategy_name, strategy_type, description, category) VALUES ('INDEX_MAINTENANCE', 'MAINTENANCE', 'Database index maintenance strategy', 'DATABASE');
INSERT INTO generic_strategy_types (strategy_name, strategy_type, description, category) VALUES ('STATISTICS_MAINTENANCE', 'MAINTENANCE', 'Database statistics maintenance strategy', 'DATABASE');
INSERT INTO generic_strategy_types (strategy_name, strategy_type, description, category) VALUES ('CLEANUP_MAINTENANCE', 'MAINTENANCE', 'Data cleanup maintenance strategy', 'DATABASE');
INSERT INTO generic_strategy_types (strategy_name, strategy_type, description, category) VALUES ('BACKUP_MAINTENANCE', 'MAINTENANCE', 'Database backup maintenance strategy', 'DATABASE');
INSERT INTO generic_strategy_types (strategy_name, strategy_type, description, category) VALUES ('ARCHIVE_MAINTENANCE', 'MAINTENANCE', 'Data archival maintenance strategy', 'DATABASE');
INSERT INTO generic_strategy_types (strategy_name, strategy_type, description, category) VALUES ('SECURITY_MAINTENANCE', 'MAINTENANCE', 'Security maintenance strategy', 'SECURITY');
INSERT INTO generic_strategy_types (strategy_name, strategy_type, description, category) VALUES ('PERFORMANCE_MAINTENANCE', 'MAINTENANCE', 'Performance optimization strategy', 'PERFORMANCE');
INSERT INTO generic_strategy_types (strategy_name, strategy_type, description, category) VALUES ('COMPLIANCE_MAINTENANCE', 'MAINTENANCE', 'Compliance maintenance strategy', 'COMPLIANCE');
INSERT INTO generic_strategy_types (strategy_name, strategy_type, description, category) VALUES ('MONITORING_MAINTENANCE', 'MAINTENANCE', 'Monitoring maintenance strategy', 'MONITORING');

-- Operation Types Lookup Table
CREATE TABLE generic_operation_types (
    operation_type_id   NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    operation_type      VARCHAR2(50) NOT NULL UNIQUE,
    description         VARCHAR2(200),
    category           VARCHAR2(30), -- CREATE, UPDATE, DELETE, ANALYZE, etc.
    is_active          CHAR(1) DEFAULT 'Y',
    created_date       DATE DEFAULT SYSDATE,
    CONSTRAINT chk_operation_type_active CHECK (is_active IN ('Y', 'N'))
);

-- Insert operation types
INSERT INTO generic_operation_types (operation_type, description, category) VALUES ('CREATE', 'Create operation', 'DML');
INSERT INTO generic_operation_types (operation_type, description, category) VALUES ('UPDATE', 'Update operation', 'DML');
INSERT INTO generic_operation_types (operation_type, description, category) VALUES ('DELETE', 'Delete operation', 'DML');
INSERT INTO generic_operation_types (operation_type, description, category) VALUES ('ANALYZE', 'Analyze operation', 'ANALYSIS');
INSERT INTO generic_operation_types (operation_type, description, category) VALUES ('REBUILD', 'Rebuild operation', 'MAINTENANCE');
INSERT INTO generic_operation_types (operation_type, description, category) VALUES ('COMPRESS', 'Compress operation', 'OPTIMIZATION');
INSERT INTO generic_operation_types (operation_type, description, category) VALUES ('CLEANUP', 'Cleanup operation', 'MAINTENANCE');
INSERT INTO generic_operation_types (operation_type, description, category) VALUES ('BACKUP', 'Backup operation', 'BACKUP');
INSERT INTO generic_operation_types (operation_type, description, category) VALUES ('RESTORE', 'Restore operation', 'BACKUP');
INSERT INTO generic_operation_types (operation_type, description, category) VALUES ('ARCHIVE', 'Archive operation', 'ARCHIVE');
INSERT INTO generic_operation_types (operation_type, description, category) VALUES ('MIGRATE', 'Migrate operation', 'MIGRATION');
INSERT INTO generic_operation_types (operation_type, description, category) VALUES ('VALIDATE', 'Validate operation', 'VALIDATION');
INSERT INTO generic_operation_types (operation_type, description, category) VALUES ('MONITOR', 'Monitor operation', 'MONITORING');
INSERT INTO generic_operation_types (operation_type, description, category) VALUES ('REPORT', 'Report operation', 'REPORTING');
INSERT INTO generic_operation_types (operation_type, description, category) VALUES ('CONFIGURE', 'Configure operation', 'CONFIGURATION');

-- Job Types Lookup Table
CREATE TABLE generic_job_types (
    job_type_id       NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    job_type          VARCHAR2(50) NOT NULL UNIQUE,
    description       VARCHAR2(200),
    category          VARCHAR2(30), -- MAINTENANCE, ANALYSIS, OPTIMIZATION, etc.
    is_active        CHAR(1) DEFAULT 'Y',
    created_date     DATE DEFAULT SYSDATE,
    CONSTRAINT chk_job_type_active CHECK (is_active IN ('Y', 'N'))
);

-- Insert job types
INSERT INTO generic_job_types (job_type, description, category) VALUES ('MAINTENANCE', 'Maintenance job', 'MAINTENANCE');
INSERT INTO generic_job_types (job_type, description, category) VALUES ('ANALYSIS', 'Analysis job', 'ANALYSIS');
INSERT INTO generic_job_types (job_type, description, category) VALUES ('OPTIMIZATION', 'Optimization job', 'OPTIMIZATION');
INSERT INTO generic_job_types (job_type, description, category) VALUES ('CLEANUP', 'Cleanup job', 'MAINTENANCE');
INSERT INTO generic_job_types (job_type, description, category) VALUES ('BACKUP', 'Backup job', 'BACKUP');
INSERT INTO generic_job_types (job_type, description, category) VALUES ('ARCHIVE', 'Archive job', 'ARCHIVE');
INSERT INTO generic_job_types (job_type, description, category) VALUES ('MIGRATION', 'Migration job', 'MIGRATION');
INSERT INTO generic_job_types (job_type, description, category) VALUES ('VALIDATION', 'Validation job', 'VALIDATION');
INSERT INTO generic_job_types (job_type, description, category) VALUES ('MONITORING', 'Monitoring job', 'MONITORING');
INSERT INTO generic_job_types (job_type, description, category) VALUES ('REPORTING', 'Reporting job', 'REPORTING');

-- Schedule Types Lookup Table
CREATE TABLE generic_schedule_types (
    schedule_type_id  NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    schedule_type     VARCHAR2(20) NOT NULL UNIQUE,
    description       VARCHAR2(100),
    is_active        CHAR(1) DEFAULT 'Y',
    created_date     DATE DEFAULT SYSDATE,
    CONSTRAINT chk_schedule_type_active CHECK (is_active IN ('Y', 'N'))
);

-- Insert schedule types
INSERT INTO generic_schedule_types (schedule_type, description) VALUES ('DAILY', 'Daily execution');
INSERT INTO generic_schedule_types (schedule_type, description) VALUES ('WEEKLY', 'Weekly execution');
INSERT INTO generic_schedule_types (schedule_type, description) VALUES ('MONTHLY', 'Monthly execution');
INSERT INTO generic_schedule_types (schedule_type, description) VALUES ('QUARTERLY', 'Quarterly execution');
INSERT INTO generic_schedule_types (schedule_type, description) VALUES ('YEARLY', 'Yearly execution');
INSERT INTO generic_schedule_types (schedule_type, description) VALUES ('CUSTOM', 'Custom schedule');
INSERT INTO generic_schedule_types (schedule_type, description) VALUES ('ON_DEMAND', 'On-demand execution');
INSERT INTO generic_schedule_types (schedule_type, description) VALUES ('EVENT_DRIVEN', 'Event-driven execution');

-- Target Types Lookup Table
CREATE TABLE generic_target_types (
    target_type_id   NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    target_type      VARCHAR2(30) NOT NULL UNIQUE,
    description      VARCHAR2(100),
    category         VARCHAR2(30), -- DATABASE, APPLICATION, SYSTEM, etc.
    is_active        CHAR(1) DEFAULT 'Y',
    created_date     DATE DEFAULT SYSDATE,
    CONSTRAINT chk_target_type_active CHECK (is_active IN ('Y', 'N'))
);

-- Insert target types
INSERT INTO generic_target_types (target_type, description, category) VALUES ('TABLE', 'Database table', 'DATABASE');
INSERT INTO generic_target_types (target_type, description, category) VALUES ('INDEX', 'Database index', 'DATABASE');
INSERT INTO generic_target_types (target_type, description, category) VALUES ('SCHEMA', 'Database schema', 'DATABASE');
INSERT INTO generic_target_types (target_type, description, category) VALUES ('DATABASE', 'Database instance', 'DATABASE');
INSERT INTO generic_target_types (target_type, description, category) VALUES ('PARTITION', 'Table partition', 'DATABASE');
INSERT INTO generic_target_types (target_type, description, category) VALUES ('TABLESPACE', 'Tablespace', 'DATABASE');
INSERT INTO generic_target_types (target_type, description, category) VALUES ('USER', 'Database user', 'DATABASE');
INSERT INTO generic_target_types (target_type, description, category) VALUES ('ROLE', 'Database role', 'DATABASE');
INSERT INTO generic_target_types (target_type, description, category) VALUES ('APPLICATION', 'Application component', 'APPLICATION');
INSERT INTO generic_target_types (target_type, description, category) VALUES ('SERVICE', 'Application service', 'APPLICATION');
INSERT INTO generic_target_types (target_type, description, category) VALUES ('FILE', 'File system object', 'SYSTEM');
INSERT INTO generic_target_types (target_type, description, category) VALUES ('DIRECTORY', 'Directory', 'SYSTEM');

-- Operation Status Lookup Table
CREATE TABLE generic_operation_status (
    status_id          NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    status             VARCHAR2(20) NOT NULL UNIQUE,
    description        VARCHAR2(100),
    is_active         CHAR(1) DEFAULT 'Y',
    created_date      DATE DEFAULT SYSDATE,
    CONSTRAINT chk_status_active CHECK (is_active IN ('Y', 'N'))
);

-- Insert operation statuses
INSERT INTO generic_operation_status (status, description) VALUES ('SUCCESS', 'Operation completed successfully');
INSERT INTO generic_operation_status (status, description) VALUES ('ERROR', 'Operation failed with error');
INSERT INTO generic_operation_status (status, description) VALUES ('WARNING', 'Operation completed with warnings');
INSERT INTO generic_operation_status (status, description) VALUES ('STARTED', 'Operation started');
INSERT INTO generic_operation_status (status, description) VALUES ('RUNNING', 'Operation in progress');
INSERT INTO generic_operation_status (status, description) VALUES ('PENDING', 'Operation pending');
INSERT INTO generic_operation_status (status, description) VALUES ('CANCELLED', 'Operation cancelled');
INSERT INTO generic_operation_status (status, description) VALUES ('TIMEOUT', 'Operation timed out');
INSERT INTO generic_operation_status (status, description) VALUES ('INFO', 'Informational message');

-- Deployment Status Lookup Table
CREATE TABLE generic_deployment_status (
    status_id        NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    status           VARCHAR2(20) NOT NULL UNIQUE,
    description      VARCHAR2(100),
    is_active        CHAR(1) DEFAULT 'Y',
    created_date     DATE DEFAULT SYSDATE,
    CONSTRAINT chk_deployment_status_active CHECK (is_active IN ('Y', 'N'))
);

-- Insert deployment status values
INSERT INTO generic_deployment_status (status, description) VALUES ('PENDING', 'Deployment pending');
INSERT INTO generic_deployment_status (status, description) VALUES ('IN_PROGRESS', 'Deployment in progress');
INSERT INTO generic_deployment_status (status, description) VALUES ('COMPLETED', 'Deployment completed successfully');
INSERT INTO generic_deployment_status (status, description) VALUES ('FAILED', 'Deployment failed');
INSERT INTO generic_deployment_status (status, description) VALUES ('ROLLED_BACK', 'Deployment rolled back');
INSERT INTO generic_deployment_status (status, description) VALUES ('CANCELLED', 'Deployment cancelled');

-- Yes/No Lookup Table
CREATE TABLE generic_yes_no (
    value_id         NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    value            CHAR(1) NOT NULL UNIQUE,
    description      VARCHAR2(20),
    created_date     DATE DEFAULT SYSDATE
);

-- Insert Yes/No values
INSERT INTO generic_yes_no (value, description) VALUES ('Y', 'Yes');
INSERT INTO generic_yes_no (value, description) VALUES ('N', 'No');

COMMIT;

-- Create indexes for performance
CREATE INDEX idx_generic_strategy_types_active ON generic_strategy_types(is_active);
CREATE INDEX idx_generic_strategy_types_category ON generic_strategy_types(category);
CREATE INDEX idx_generic_operation_types_active ON generic_operation_types(is_active);
CREATE INDEX idx_generic_operation_types_category ON generic_operation_types(category);
CREATE INDEX idx_generic_job_types_active ON generic_job_types(is_active);
CREATE INDEX idx_generic_job_types_category ON generic_job_types(category);
CREATE INDEX idx_generic_schedule_types_active ON generic_schedule_types(is_active);
CREATE INDEX idx_generic_target_types_active ON generic_target_types(is_active);
CREATE INDEX idx_generic_target_types_category ON generic_target_types(category);
CREATE INDEX idx_generic_operation_status_active ON generic_operation_status(is_active);
CREATE INDEX idx_generic_deployment_status_active ON generic_deployment_status(is_active);

PROMPT Generic lookup tables created successfully
