-- =====================================================
-- Oracle Generic Maintenance Jobs Table
-- Configuration table for automated maintenance strategies
-- Author: Principal Oracle Database Application Engineer
-- Version: 1.0
-- =====================================================

-- Create generic maintenance job configuration table
CREATE TABLE generic_maintenance_jobs (
    job_id            NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    strategy_name     VARCHAR2(50) NOT NULL,
    job_name         VARCHAR2(128) NOT NULL,
    job_type          VARCHAR2(50) NOT NULL,
    schedule_type     VARCHAR2(20) NOT NULL,
    schedule_value    VARCHAR2(100),
    target_object     VARCHAR2(128), -- Table, schema, database, etc.
    target_type       VARCHAR2(30), -- TABLE, SCHEMA, DATABASE, INDEX, etc.
    is_active         CHAR(1) DEFAULT 'Y',
    last_run          DATE,
    next_run          DATE,
    created_date      DATE DEFAULT SYSDATE,
    created_by        VARCHAR2(30) DEFAULT USER,
    -- Enhanced fields for optimized maintenance
    last_modified     DATE DEFAULT SYSDATE,
    last_modified_by  VARCHAR2(30) DEFAULT USER,
    execution_count   NUMBER DEFAULT 0,
    avg_duration_ms   NUMBER,
    last_duration_ms  NUMBER,
    last_status       VARCHAR2(20),
    error_count       NUMBER DEFAULT 0,
    last_error        VARCHAR2(4000),
    -- Strategy-specific parameters (JSON or CLOB for flexibility)
    job_parameters    CLOB,
    -- Dependencies and prerequisites
    depends_on_jobs   VARCHAR2(1000), -- Comma-separated job IDs
    prerequisite_checks VARCHAR2(4000),
    -- Resource management
    max_parallel_degree NUMBER DEFAULT 1,
    resource_limits   VARCHAR2(1000),
    -- Notification and alerting
    notify_on_success CHAR(1) DEFAULT 'N',
    notify_on_failure CHAR(1) DEFAULT 'Y',
    notification_recipients VARCHAR2(1000),
    -- Foreign key constraints
    CONSTRAINT fk_generic_job_strategy FOREIGN KEY (strategy_name) 
        REFERENCES generic_strategy_types(strategy_name),
    CONSTRAINT fk_generic_job_type FOREIGN KEY (job_type) 
        REFERENCES generic_job_types(job_type),
    CONSTRAINT fk_generic_schedule_type FOREIGN KEY (schedule_type) 
        REFERENCES generic_schedule_types(schedule_type),
    CONSTRAINT fk_generic_job_active FOREIGN KEY (is_active) 
        REFERENCES generic_yes_no(value),
    CONSTRAINT fk_generic_job_last_status FOREIGN KEY (last_status) 
        REFERENCES generic_operation_status(status),
    CONSTRAINT fk_generic_target_type FOREIGN KEY (target_type) 
        REFERENCES generic_target_types(target_type)
);

-- Create indexes for performance
CREATE INDEX idx_generic_jobs_strategy ON generic_maintenance_jobs(strategy_name);
CREATE INDEX idx_generic_jobs_name ON generic_maintenance_jobs(job_name);
CREATE INDEX idx_generic_jobs_type ON generic_maintenance_jobs(job_type);
CREATE INDEX idx_generic_jobs_schedule ON generic_maintenance_jobs(schedule_type);
CREATE INDEX idx_generic_jobs_active ON generic_maintenance_jobs(is_active);
CREATE INDEX idx_generic_jobs_next_run ON generic_maintenance_jobs(next_run);
CREATE INDEX idx_generic_jobs_target ON generic_maintenance_jobs(target_object, target_type);

-- Enhanced indexes for optimized maintenance
CREATE INDEX idx_generic_jobs_last_status ON generic_maintenance_jobs(last_status);
CREATE INDEX idx_generic_jobs_error_count ON generic_maintenance_jobs(error_count);
CREATE INDEX idx_generic_jobs_execution_count ON generic_maintenance_jobs(execution_count);
CREATE INDEX idx_generic_jobs_last_modified ON generic_maintenance_jobs(last_modified);
CREATE INDEX idx_generic_jobs_dependencies ON generic_maintenance_jobs(depends_on_jobs);

-- Create interval partitioned table for automatic partition creation
ALTER TABLE generic_maintenance_jobs 
PARTITION BY RANGE (created_date) 
INTERVAL (NUMTODSINTERVAL(1, 'YEAR')) (
    PARTITION p_jobs_initial VALUES LESS THAN (TO_DATE('2024-01-01', 'YYYY-MM-DD'))
);

PROMPT Generic maintenance jobs table created successfully
