-- =====================================================
-- Oracle Partition Management Lookup Tables
-- Reference tables for referential integrity constraints
-- Author: Principal Oracle Database Application Engineer
-- Version: 1.0
-- =====================================================

-- Operation Types Lookup Table
CREATE TABLE partition_operation_types (
    operation_type_id   NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    operation_type      VARCHAR2(50) NOT NULL UNIQUE,
    description         VARCHAR2(200),
    is_active          CHAR(1) DEFAULT 'Y',
    created_date       DATE DEFAULT SYSDATE,
    CONSTRAINT chk_operation_active CHECK (is_active IN ('Y', 'N'))
);

-- Insert operation types
INSERT INTO partition_operation_types (operation_type, description) VALUES ('CREATE_PARTITION', 'Create new partition');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('DROP_PARTITION', 'Drop existing partition');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('SPLIT_PARTITION', 'Split partition into multiple partitions');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('MERGE_PARTITIONS', 'Merge multiple partitions');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('MOVE_PARTITION', 'Move partition to different tablespace');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('TRUNCATE_PARTITION', 'Truncate partition data');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('EXCHANGE_PARTITION', 'Exchange partition with table');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('REBUILD_INDEXES', 'Rebuild partition indexes');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('ANALYZE', 'Analyze partition statistics');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('COMPRESS', 'Compress partition');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('CLEANUP', 'Cleanup old partitions');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('MAINTENANCE_CREATE_JOB', 'Create maintenance job');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('MAINTENANCE_UPDATE_JOB', 'Update maintenance job');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('MAINTENANCE_DELETE_JOB', 'Delete maintenance job');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('MAINTENANCE_EXECUTE_JOB', 'Execute maintenance job');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('STRATEGY_CHANGE', 'Change partition strategy');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('CONFIG', 'Configuration change');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('VALIDATE', 'Validation operation');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('MONITOR', 'Monitoring operation');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('REPORT', 'Report generation');

-- New operation types from optimized packages
INSERT INTO partition_operation_types (operation_type, description) VALUES ('MAINTENANCE_CREATE_JOB', 'Create maintenance job');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('MAINTENANCE_UPDATE_JOB', 'Update maintenance job');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('MAINTENANCE_DELETE_JOB', 'Delete maintenance job');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('MAINTENANCE_EXECUTE_JOB', 'Execute maintenance job');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('MAINTENANCE_EXECUTE_ALL', 'Execute all maintenance jobs');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('MAINTENANCE_EXECUTE_TABLE', 'Execute table maintenance');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('MAINTENANCE_SCHEDULE', 'Schedule maintenance job');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('MAINTENANCE_VALIDATE', 'Validate maintenance job');

-- Strategy operation types
INSERT INTO partition_operation_types (operation_type, description) VALUES ('STRATEGY_CREATE_CONFIG', 'Create strategy configuration');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('STRATEGY_UPDATE_CONFIG', 'Update strategy configuration');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('STRATEGY_DEACTIVATE_CONFIG', 'Deactivate strategy configuration');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('STRATEGY_GET_CONFIG', 'Get strategy configuration');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('STRATEGY_MIGRATE_RANGE', 'Migrate to range partitioning');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('STRATEGY_MIGRATE_LIST', 'Migrate to list partitioning');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('STRATEGY_MIGRATE_HASH', 'Migrate to hash partitioning');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('STRATEGY_MIGRATE_INTERVAL', 'Migrate to interval partitioning');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('STRATEGY_MIGRATE_REFERENCE', 'Migrate to reference partitioning');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('STRATEGY_ANALYZE_TABLE', 'Analyze table for partitioning');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('STRATEGY_OPTIMIZE', 'Optimize partition strategy');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('STRATEGY_REBALANCE', 'Rebalance partitions');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('STRATEGY_CONSOLIDATE', 'Consolidate small partitions');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('STRATEGY_VALIDATE_COLUMN', 'Validate partition column');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('STRATEGY_MONITOR_PERF', 'Monitor strategy performance');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('STRATEGY_GENERATE_SCRIPT', 'Generate migration script');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('STRATEGY_ESTIMATE_IMPACT', 'Estimate migration impact');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('STRATEGY_ROLLBACK', 'Rollback strategy migration');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('STRATEGY_CONVERT_PARTITIONED', 'Convert to partitioned table');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('STRATEGY_CONVERT_PARTITIONED_SUBPART', 'Convert to partitioned table with subpartitions');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('STRATEGY_CONVERT_NON_PARTITIONED', 'Convert to non-partitioned table');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('STRATEGY_ADD_SUBPARTITIONING', 'Add subpartitioning to table');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('STRATEGY_MIGRATE_AUTO_LIST', 'Migrate to auto list partitioning');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('STRATEGY_MIGRATE_AUTO_RANGE', 'Migrate to auto range partitioning');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('STRATEGY_MIGRATE_HYBRID', 'Migrate to hybrid partitioning');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('STRATEGY_BATCH_INSERT', 'Batch insert data');

-- Utils operation types
INSERT INTO partition_operation_types (operation_type, description) VALUES ('UTILS_ANALYZE_HEALTH', 'Analyze partition health');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('UTILS_HEALTH_REPORT', 'Generate health report');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('UTILS_PERFORMANCE_ANALYSIS', 'Analyze partition performance');

-- New conversion operation types
INSERT INTO partition_operation_types (operation_type, description) VALUES ('CONVERT_TO_PARTITIONED', 'Convert table to partitioned');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('CONVERT_TO_PARTITIONED_SUBPART', 'Convert table to partitioned with subpartitions');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('CONVERT_TO_NON_PARTITIONED', 'Convert partitioned table to non-partitioned');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('ADD_SUBPARTITIONING', 'Add subpartitioning to table');

-- Online operation types
INSERT INTO partition_operation_types (operation_type, description) VALUES ('ONLINE_REORGANIZE', 'Online partition reorganization');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('ONLINE_SPLIT', 'Online partition split');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('ONLINE_MERGE', 'Online partition merge');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('ONLINE_COALESCE', 'Online partition coalesce');

-- Resource management operation types
INSERT INTO partition_operation_types (operation_type, description) VALUES ('RESOURCE_MONITOR', 'Monitor operation resources');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('RESOURCE_ALERT', 'Resource usage alert');
INSERT INTO partition_operation_types (operation_type, description) VALUES ('OPTIMIZATION_ADVICE', 'Provide optimization advice');

-- Operation Status Lookup Table
CREATE TABLE partition_operation_status (
    status_id          NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    status             VARCHAR2(20) NOT NULL UNIQUE,
    description        VARCHAR2(100),
    is_active         CHAR(1) DEFAULT 'Y',
    created_date      DATE DEFAULT SYSDATE,
    CONSTRAINT chk_status_active CHECK (is_active IN ('Y', 'N'))
);

-- Insert operation statuses
INSERT INTO partition_operation_status (status, description) VALUES ('SUCCESS', 'Operation completed successfully');
INSERT INTO partition_operation_status (status, description) VALUES ('ERROR', 'Operation failed with error');
INSERT INTO partition_operation_status (status, description) VALUES ('WARNING', 'Operation completed with warnings');
INSERT INTO partition_operation_status (status, description) VALUES ('STARTED', 'Operation started');
INSERT INTO partition_operation_status (status, description) VALUES ('INFO', 'Informational message');

-- Job Types Lookup Table
CREATE TABLE partition_job_types (
    job_type_id       NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    job_type          VARCHAR2(50) NOT NULL UNIQUE,
    description       VARCHAR2(200),
    is_active        CHAR(1) DEFAULT 'Y',
    created_date     DATE DEFAULT SYSDATE,
    CONSTRAINT chk_job_type_active CHECK (is_active IN ('Y', 'N'))
);

-- Insert job types
INSERT INTO partition_job_types (job_type, description) VALUES ('CLEANUP', 'Cleanup old partitions');
INSERT INTO partition_job_types (job_type, description) VALUES ('REBUILD_INDEXES', 'Rebuild partition indexes');
INSERT INTO partition_job_types (job_type, description) VALUES ('ANALYZE', 'Analyze partition statistics');
INSERT INTO partition_job_types (job_type, description) VALUES ('COMPRESS', 'Compress partitions');
INSERT INTO partition_job_types (job_type, description) VALUES ('MOVE', 'Move partitions');
INSERT INTO partition_job_types (job_type, description) VALUES ('SPLIT', 'Split partitions');
INSERT INTO partition_job_types (job_type, description) VALUES ('MERGE', 'Merge partitions');

-- Schedule Types Lookup Table
CREATE TABLE partition_schedule_types (
    schedule_type_id  NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    schedule_type     VARCHAR2(20) NOT NULL UNIQUE,
    description       VARCHAR2(100),
    is_active        CHAR(1) DEFAULT 'Y',
    created_date     DATE DEFAULT SYSDATE,
    CONSTRAINT chk_schedule_type_active CHECK (is_active IN ('Y', 'N'))
);

-- Insert schedule types
INSERT INTO partition_schedule_types (schedule_type, description) VALUES ('DAILY', 'Daily execution');
INSERT INTO partition_schedule_types (schedule_type, description) VALUES ('WEEKLY', 'Weekly execution');
INSERT INTO partition_schedule_types (schedule_type, description) VALUES ('MONTHLY', 'Monthly execution');
INSERT INTO partition_schedule_types (schedule_type, description) VALUES ('CUSTOM', 'Custom schedule');

-- Strategy Types Lookup Table
CREATE TABLE partition_strategy_types (
    strategy_type_id  NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    strategy_type     VARCHAR2(20) NOT NULL UNIQUE,
    description       VARCHAR2(200),
    is_active        CHAR(1) DEFAULT 'Y',
    created_date     DATE DEFAULT SYSDATE,
    CONSTRAINT chk_strategy_type_active CHECK (is_active IN ('Y', 'N'))
);

-- Insert strategy types
INSERT INTO partition_strategy_types (strategy_type, description) VALUES ('RANGE', 'Range partitioning');
INSERT INTO partition_strategy_types (strategy_type, description) VALUES ('LIST', 'List partitioning');
INSERT INTO partition_strategy_types (strategy_type, description) VALUES ('HASH', 'Hash partitioning');
INSERT INTO partition_strategy_types (strategy_type, description) VALUES ('INTERVAL', 'Interval partitioning');
INSERT INTO partition_strategy_types (strategy_type, description) VALUES ('REFERENCE', 'Reference partitioning');
INSERT INTO partition_strategy_types (strategy_type, description) VALUES ('SYSTEM', 'System partitioning');

-- New Oracle 19c strategy types from optimized packages
INSERT INTO partition_strategy_types (strategy_type, description) VALUES ('AUTO_LIST', 'Auto list partitioning (Oracle 19c)');
INSERT INTO partition_strategy_types (strategy_type, description) VALUES ('AUTO_RANGE', 'Auto range partitioning (Oracle 19c)');
INSERT INTO partition_strategy_types (strategy_type, description) VALUES ('HYBRID', 'Hybrid partitioning (combination of manual and automatic)');

-- Yes/No Lookup Table
CREATE TABLE partition_yes_no (
    value_id         NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    value            CHAR(1) NOT NULL UNIQUE,
    description      VARCHAR2(20),
    created_date     DATE DEFAULT SYSDATE
);

-- Insert Yes/No values
INSERT INTO partition_yes_no (value, description) VALUES ('Y', 'Yes');
INSERT INTO partition_yes_no (value, description) VALUES ('N', 'No');

-- Migration Status Lookup Table
CREATE TABLE partition_migration_status (
    status_id        NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    status           VARCHAR2(20) NOT NULL UNIQUE,
    description      VARCHAR2(100),
    is_active        CHAR(1) DEFAULT 'Y',
    created_date     DATE DEFAULT SYSDATE,
    CONSTRAINT chk_migration_status_active CHECK (is_active IN ('Y', 'N'))
);

-- Insert migration status values
INSERT INTO partition_migration_status (status, description) VALUES ('PENDING', 'Migration pending');
INSERT INTO partition_migration_status (status, description) VALUES ('IN_PROGRESS', 'Migration in progress');
INSERT INTO partition_migration_status (status, description) VALUES ('COMPLETED', 'Migration completed successfully');
INSERT INTO partition_migration_status (status, description) VALUES ('FAILED', 'Migration failed');
INSERT INTO partition_migration_status (status, description) VALUES ('ROLLED_BACK', 'Migration rolled back');
INSERT INTO partition_migration_status (status, description) VALUES ('CANCELLED', 'Migration cancelled');

-- Compression Type Lookup Table
CREATE TABLE partition_compression_types (
    compression_id   NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    compression_type VARCHAR2(20) NOT NULL UNIQUE,
    description      VARCHAR2(100),
    is_active        CHAR(1) DEFAULT 'Y',
    created_date     DATE DEFAULT SYSDATE,
    CONSTRAINT chk_compression_type_active CHECK (is_active IN ('Y', 'N'))
);

-- Insert compression type values
INSERT INTO partition_compression_types (compression_type, description) VALUES ('NONE', 'No compression');
INSERT INTO partition_compression_types (compression_type, description) VALUES ('BASIC', 'Basic compression');
INSERT INTO partition_compression_types (compression_type, description) VALUES ('ADVANCED', 'Advanced compression (OLTP)');
INSERT INTO partition_compression_types (compression_type, description) VALUES ('QUERY_HIGH', 'Query high compression');
INSERT INTO partition_compression_types (compression_type, description) VALUES ('QUERY_LOW', 'Query low compression');
INSERT INTO partition_compression_types (compression_type, description) VALUES ('ARCHIVE', 'Archive compression');
INSERT INTO partition_compression_types (compression_type, description) VALUES ('ARCHIVE_HIGH', 'Archive high compression');

COMMIT;

-- Create indexes for performance
CREATE INDEX idx_operation_types_active ON partition_operation_types(is_active);
CREATE INDEX idx_operation_status_active ON partition_operation_status(is_active);
CREATE INDEX idx_job_types_active ON partition_job_types(is_active);
CREATE INDEX idx_schedule_types_active ON partition_schedule_types(is_active);
CREATE INDEX idx_strategy_types_active ON partition_strategy_types(is_active);
CREATE INDEX idx_migration_status_active ON partition_migration_status(is_active);
CREATE INDEX idx_compression_types_active ON partition_compression_types(is_active);

PROMPT Lookup tables created successfully
